// Generated by view binder compiler. Do not edit!
package com.example.face2face.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.face2face.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityIncomingInvitationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageacceptinvitation;

  @NonNull
  public final ImageView imagemeetingtype;

  @NonNull
  public final ImageView imagerejectinvitation;

  @NonNull
  public final TextView textEmail;

  @NonNull
  public final TextView textFirstChar;

  @NonNull
  public final TextView textincomingmeetinginvitation;

  @NonNull
  public final TextView textusername;

  private ActivityIncomingInvitationBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageacceptinvitation, @NonNull ImageView imagemeetingtype,
      @NonNull ImageView imagerejectinvitation, @NonNull TextView textEmail,
      @NonNull TextView textFirstChar, @NonNull TextView textincomingmeetinginvitation,
      @NonNull TextView textusername) {
    this.rootView = rootView;
    this.imageacceptinvitation = imageacceptinvitation;
    this.imagemeetingtype = imagemeetingtype;
    this.imagerejectinvitation = imagerejectinvitation;
    this.textEmail = textEmail;
    this.textFirstChar = textFirstChar;
    this.textincomingmeetinginvitation = textincomingmeetinginvitation;
    this.textusername = textusername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityIncomingInvitationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityIncomingInvitationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_incoming_invitation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityIncomingInvitationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageacceptinvitation;
      ImageView imageacceptinvitation = rootView.findViewById(id);
      if (imageacceptinvitation == null) {
        break missingId;
      }

      id = R.id.imagemeetingtype;
      ImageView imagemeetingtype = rootView.findViewById(id);
      if (imagemeetingtype == null) {
        break missingId;
      }

      id = R.id.imagerejectinvitation;
      ImageView imagerejectinvitation = rootView.findViewById(id);
      if (imagerejectinvitation == null) {
        break missingId;
      }

      id = R.id.textEmail;
      TextView textEmail = rootView.findViewById(id);
      if (textEmail == null) {
        break missingId;
      }

      id = R.id.textFirstChar;
      TextView textFirstChar = rootView.findViewById(id);
      if (textFirstChar == null) {
        break missingId;
      }

      id = R.id.textincomingmeetinginvitation;
      TextView textincomingmeetinginvitation = rootView.findViewById(id);
      if (textincomingmeetinginvitation == null) {
        break missingId;
      }

      id = R.id.textusername;
      TextView textusername = rootView.findViewById(id);
      if (textusername == null) {
        break missingId;
      }

      return new ActivityIncomingInvitationBinding((ConstraintLayout) rootView,
          imageacceptinvitation, imagemeetingtype, imagerejectinvitation, textEmail, textFirstChar,
          textincomingmeetinginvitation, textusername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
